using System.Collections;
using System.Collections.Generic;
using UnityEngine;

[System.Serializable]
public class SaveDataLandmark {
    public int id;
    public string landmarkName;
    public LANDMARK_TYPE landmarkType;
    public int locationID;
    public int connectedTileID;
    public List<LANDMARK_TAG> landmarkTags;
<<<<<<< Updated upstream
    public List<int> connectionsTileIDs;
    public List<int> charactersHereIDs;
    public SaveDataWorldObject worldObj;
    public bool hasWorldObject;
    public WORLD_EVENT activeEvent;
    public int eventSpawnedByCharacterID;
    public bool hasEventIconGO;
    public SaveDataWorldEventData eventData;

    public virtual void Save(BaseLandmark landmark) {
=======
   
    public void Save(BaseLandmark landmark) {
>>>>>>> Stashed changes
        id = landmark.id;
        landmarkName = landmark.landmarkName;
        landmarkType = landmark.specificLandmarkType;
        locationID = landmark.tileLocation.id;
        if(landmark.connectedTile != null) {
            connectedTileID = landmark.connectedTile.id;
        } else {
            connectedTileID = -1;
        }
        landmarkTags = landmark.landmarkTags;

        
    }
    public void Load(HexTile tile) {
        BaseLandmark landmark = tile.CreateLandmarkOfType(this);
    }
}
